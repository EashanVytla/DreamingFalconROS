Bootstrap: docker
From: ubuntu:22.04

%post
    export DEBIAN_FRONTEND=noninteractive

    # Ensure locales are installed
    apt-get update && apt-get install -y locales
    locale-gen en_US en_US.UTF-8
    update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
    export LANG=en_US.UTF-8

    # Basic setup
    apt-get install -y software-properties-common
    add-apt-repository universe
    apt-get update && apt-get install -y curl

    # Add ROS 2 repository & key
    curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu \
    $(. /etc/os-release && echo $UBUNTU_CODENAME) main" \
    > /etc/apt/sources.list.d/ros2.list

    # Upgrade and install ROS 2 + dependencies
    apt-get update && apt-get upgrade -y
    apt-get install -y \
        lsb-release \
        gnupg \
        wget \
        git \
        python3-pip \
        build-essential \
        cmake \
        ninja-build \
        protobuf-compiler \
        libeigen3-dev \
        libgtest-dev \
        python3-colcon-common-extensions \
        python3-rosdep \
        python3-vcstool \
        ros-humble-desktop \
        ros-humble-ros-base \
        ros-humble-gazebo-ros-pkgs \
        ros-humble-xacro \
        ros-humble-rqt \
        ros-humble-rviz2 \
        libopencv-dev \
        libyaml-cpp-dev && \
        rm -rf /var/lib/apt/lists/*

    # Source ROS setup
    echo "source /opt/ros/humble/setup.bash" >> ~/.bashrc

    # (Optional) Install PX4
    useradd --create-home --shell /bin/bash px4user
    echo "px4user ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers
    su - px4user -c "
        git clone --recursive https://github.com/PX4/PX4-Autopilot.git ~/PX4-Autopilot && \
    "

        set -e
    
    echo "Updating package list and installing base dependencies..."
    apt-get update -y --quiet && \
    DEBIAN_FRONTEND=noninteractive apt-get -y --quiet --no-install-recommends install \
        astyle \
        build-essential \
        ccache \
        cmake \
        cppcheck \
        file \
        g++ \
        gcc \
        gdb \
        git \
        lcov \
        libssl-dev \
        libxml2-dev \
        libxml2-utils \
        make \
        ninja-build \
        python3 \
        python3-dev \
        python3-pip \
        python3-setuptools \
        python3-wheel \
        rsync \
        shellcheck \
        unzip \
        zip \
        dmidecode \
        bc \
        libeigen3-dev \
        libimage-exiftool-perl \
        libopencv-dev \
        libxml2-utils \
        pkg-config \
        protobuf-compiler \
        gstreamer1.0-plugins-bad \
        gstreamer1.0-plugins-base \
        gstreamer1.0-plugins-good \
        gstreamer1.0-plugins-ugly \
        gstreamer1.0-libav \
        && rm -rf /var/lib/apt/lists/*

    echo "Installing Gazebo (Harmonic)..."
    wget https://packages.osrfoundation.org/gazebo.gpg -O /usr/share/keyrings/pkgs-osrf-archive-keyring.gpg && \
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/pkgs-osrf-archive-keyring.gpg] http://packages.osrfoundation.org/gazebo/ubuntu-stable $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/gazebo-stable.list > /dev/null && \
    apt-get update -y --quiet && \
    DEBIAN_FRONTEND=noninteractive apt-get -y --quiet --no-install-recommends install \
        gz-harmonic \
        libunwind-dev \
        && rm -rf /var/lib/apt/lists/*

    echo "Fixing potential VMWare graphics issues for Gazebo..."
    if dmidecode -t system | grep -q "Manufacturer: VMware, Inc." ; then
        echo "export SVGA_VGPU10=0" >> /etc/profile
    fi

    echo "Installing PX4 Python dependencies..."
    python3 -m pip install --upgrade pip setuptools wheel && \
    python3 -m pip install --break-system-packages -r /requirements.txt

%files
    requirements.txt /requirements.txt

%environment
    source /opt/ros/humble/setup.bash
    export PATH="/home/px4user/PX4-Autopilot:$PATH"
    export PX4_SIM_MODEL=iris
    
    export PATH="/usr/local/bin:$PATH"
    export GZ_SIM_RESOURCE_PATH="/usr/share/gazebo-11"
    export SVGA_VGPU10=0

%runscript
    exec "$@"